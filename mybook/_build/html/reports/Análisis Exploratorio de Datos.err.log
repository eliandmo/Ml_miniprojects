Traceback (most recent call last):
  File "C:\Users\Elian\miniconda3\Lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Elian\miniconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "C:\Users\Elian\miniconda3\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Elian\miniconda3\Lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\Elian\miniconda3\Lib\asyncio\base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\Elian\miniconda3\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "C:\Users\Elian\miniconda3\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Elian\miniconda3\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Eliminar filas con valores nulos si es necesario
df_clean = df.dropna(subset=['Average_grade', 'Target']).copy()

#VisualizaciÃ³n
plt.figure(figsize=(15, 12))

# GrÃ¡fico 1: DistribuciÃ³n de abandono
plt.subplot(2, 2, 1)
target_counts = df_clean['Target'].value_counts()
sns.barplot(x=target_counts.index, y=target_counts.values, palette='viridis')
plt.title('DistribuciÃ³n de Abandono AcadÃ©mico\n(Total estudiantes: {})'.format(len(df_clean)))
plt.xlabel('Estado del Estudiante')
plt.ylabel('Cantidad')
for i, count in enumerate(target_counts):
    plt.text(i, count+5, str(count), ha='center')
------------------


[31m---------------------------------------------------------------------------[39m
[31mKeyError[39m                                  Traceback (most recent call last)
[32m~\AppData\Local\Temp\ipykernel_22540\3313886783.py[39m in [36m?[39m[34m()[39m
[32m      1[39m [38;5;66;03m# Eliminar filas con valores nulos si es necesario[39;00m
[32m----> [39m[32m2[39m df_clean = df.dropna(subset=[[33m'Average_grade'[39m, [33m'Target'[39m]).copy()
[32m      3[39m 
[32m      4[39m [38;5;66;03m#VisualizaciÃ³n[39;00m
[32m      5[39m plt.figure(figsize=([32m15[39m, [32m12[39m))

[32mc:\Users\Elian\miniconda3\Lib\site-packages\pandas\core\frame.py[39m in [36m?[39m[34m(self, axis, how, thresh, subset, inplace, ignore_index)[39m
[32m   6673[39m             ax = self._get_axis(agg_axis)
[32m   6674[39m             indices = ax.get_indexer_for(subset)
[32m   6675[39m             check = indices == -[32m1[39m
[32m   6676[39m             [38;5;28;01mif[39;00m check.any():
[32m-> [39m[32m6677[39m                 [38;5;28;01mraise[39;00m KeyError(np.array(subset)[check].tolist())
[32m   6678[39m             agg_obj = self.take(indices, axis=agg_axis)
[32m   6679[39m 
[32m   6680[39m         [38;5;28;01mif[39;00m thresh [38;5;28;01mis[39;00m [38;5;28;01mnot[39;00m lib.no_default:

[31mKeyError[39m: ['Average_grade']

